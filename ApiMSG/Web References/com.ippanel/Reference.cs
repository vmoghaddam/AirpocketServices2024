//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ApiMSG.com.ippanel {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="smsserverBinding", Namespace="urn:smsserver")]
    public partial class smsserver : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteperiodOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback inboxlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsertimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnswerTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQuickSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPatternSmsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public smsserver() {
            this.Url = global::ApiMSG.Properties.Settings.Default.ApiMSG_com_ippanel_smsserver;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendSMSV2CompletedEventHandler SendSMSV2Completed;
        
        /// <remarks/>
        public event GetCreditCompletedEventHandler GetCreditCompleted;
        
        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;
        
        /// <remarks/>
        public event deleteperiodCompletedEventHandler deleteperiodCompleted;
        
        /// <remarks/>
        public event sendvoiceCompletedEventHandler sendvoiceCompleted;
        
        /// <remarks/>
        public event GetLinesCompletedEventHandler GetLinesCompleted;
        
        /// <remarks/>
        public event inboxlistCompletedEventHandler inboxlistCompleted;
        
        /// <remarks/>
        public event GetDeliveryCompletedEventHandler GetDeliveryCompleted;
        
        /// <remarks/>
        public event GetUsertimeCompletedEventHandler GetUsertimeCompleted;
        
        /// <remarks/>
        public event CheckMessageCompletedEventHandler CheckMessageCompleted;
        
        /// <remarks/>
        public event GetTicketListCompletedEventHandler GetTicketListCompleted;
        
        /// <remarks/>
        public event GetTicketDetailCompletedEventHandler GetTicketDetailCompleted;
        
        /// <remarks/>
        public event AddTicketCompletedEventHandler AddTicketCompleted;
        
        /// <remarks/>
        public event AnswerTicketCompletedEventHandler AnswerTicketCompleted;
        
        /// <remarks/>
        public event SendQuickSMSCompletedEventHandler SendQuickSMSCompleted;
        
        /// <remarks/>
        public event sendPatternSmsCompletedEventHandler sendPatternSmsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SendSMS", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string SendSMS(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        fromNum,
                        toNum,
                        messageContent,
                        user,
                        pass,
                        time,
                        op});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op) {
            this.SendSMSAsync(fromNum, toNum, messageContent, user, pass, time, op, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        fromNum,
                        toNum,
                        messageContent,
                        user,
                        pass,
                        time,
                        op}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SendSMSV2", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string SendSMSV2(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op) {
            object[] results = this.Invoke("SendSMSV2", new object[] {
                        fromNum,
                        toNum,
                        messageContent,
                        user,
                        pass,
                        time,
                        op});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSV2Async(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op) {
            this.SendSMSV2Async(fromNum, toNum, messageContent, user, pass, time, op, null);
        }
        
        /// <remarks/>
        public void SendSMSV2Async(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op, object userState) {
            if ((this.SendSMSV2OperationCompleted == null)) {
                this.SendSMSV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSV2OperationCompleted);
            }
            this.InvokeAsync("SendSMSV2", new object[] {
                        fromNum,
                        toNum,
                        messageContent,
                        user,
                        pass,
                        time,
                        op}, this.SendSMSV2OperationCompleted, userState);
        }
        
        private void OnSendSMSV2OperationCompleted(object arg) {
            if ((this.SendSMSV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSV2Completed(this, new SendSMSV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetCredit", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetCredit(string user, string pass) {
            object[] results = this.Invoke("GetCredit", new object[] {
                        user,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditAsync(string user, string pass) {
            this.GetCreditAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void GetCreditAsync(string user, string pass, object userState) {
            if ((this.GetCreditOperationCompleted == null)) {
                this.GetCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditOperationCompleted);
            }
            this.InvokeAsync("GetCredit", new object[] {
                        user,
                        pass}, this.GetCreditOperationCompleted, userState);
        }
        
        private void OnGetCreditOperationCompleted(object arg) {
            if ((this.GetCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCompleted(this, new GetCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetStatus", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetStatus(string user, string pass, string batchid, string[] unique_ids) {
            object[] results = this.Invoke("GetStatus", new object[] {
                        user,
                        pass,
                        batchid,
                        unique_ids});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusAsync(string user, string pass, string batchid, string[] unique_ids) {
            this.GetStatusAsync(user, pass, batchid, unique_ids, null);
        }
        
        /// <remarks/>
        public void GetStatusAsync(string user, string pass, string batchid, string[] unique_ids, object userState) {
            if ((this.GetStatusOperationCompleted == null)) {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[] {
                        user,
                        pass,
                        batchid,
                        unique_ids}, this.GetStatusOperationCompleted, userState);
        }
        
        private void OnGetStatusOperationCompleted(object arg) {
            if ((this.GetStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteperiod", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string deleteperiod(string user, string pass, string bulkid) {
            object[] results = this.Invoke("deleteperiod", new object[] {
                        user,
                        pass,
                        bulkid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteperiodAsync(string user, string pass, string bulkid) {
            this.deleteperiodAsync(user, pass, bulkid, null);
        }
        
        /// <remarks/>
        public void deleteperiodAsync(string user, string pass, string bulkid, object userState) {
            if ((this.deleteperiodOperationCompleted == null)) {
                this.deleteperiodOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteperiodOperationCompleted);
            }
            this.InvokeAsync("deleteperiod", new object[] {
                        user,
                        pass,
                        bulkid}, this.deleteperiodOperationCompleted, userState);
        }
        
        private void OndeleteperiodOperationCompleted(object arg) {
            if ((this.deleteperiodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteperiodCompleted(this, new deleteperiodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("sendvoice", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string sendvoice(string user, string pass, string repeat, string time) {
            object[] results = this.Invoke("sendvoice", new object[] {
                        user,
                        pass,
                        repeat,
                        time});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendvoiceAsync(string user, string pass, string repeat, string time) {
            this.sendvoiceAsync(user, pass, repeat, time, null);
        }
        
        /// <remarks/>
        public void sendvoiceAsync(string user, string pass, string repeat, string time, object userState) {
            if ((this.sendvoiceOperationCompleted == null)) {
                this.sendvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendvoiceOperationCompleted);
            }
            this.InvokeAsync("sendvoice", new object[] {
                        user,
                        pass,
                        repeat,
                        time}, this.sendvoiceOperationCompleted, userState);
        }
        
        private void OnsendvoiceOperationCompleted(object arg) {
            if ((this.sendvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendvoiceCompleted(this, new sendvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetLines", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetLines(string user, string pass) {
            object[] results = this.Invoke("GetLines", new object[] {
                        user,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinesAsync(string user, string pass) {
            this.GetLinesAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void GetLinesAsync(string user, string pass, object userState) {
            if ((this.GetLinesOperationCompleted == null)) {
                this.GetLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinesOperationCompleted);
            }
            this.InvokeAsync("GetLines", new object[] {
                        user,
                        pass}, this.GetLinesOperationCompleted, userState);
        }
        
        private void OnGetLinesOperationCompleted(object arg) {
            if ((this.GetLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinesCompleted(this, new GetLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("inboxlist", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string inboxlist(string user, string pass) {
            object[] results = this.Invoke("inboxlist", new object[] {
                        user,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void inboxlistAsync(string user, string pass) {
            this.inboxlistAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void inboxlistAsync(string user, string pass, object userState) {
            if ((this.inboxlistOperationCompleted == null)) {
                this.inboxlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OninboxlistOperationCompleted);
            }
            this.InvokeAsync("inboxlist", new object[] {
                        user,
                        pass}, this.inboxlistOperationCompleted, userState);
        }
        
        private void OninboxlistOperationCompleted(object arg) {
            if ((this.inboxlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inboxlistCompleted(this, new inboxlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetDelivery", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetDelivery(string user, string pass, string uniqid) {
            object[] results = this.Invoke("GetDelivery", new object[] {
                        user,
                        pass,
                        uniqid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryAsync(string user, string pass, string uniqid) {
            this.GetDeliveryAsync(user, pass, uniqid, null);
        }
        
        /// <remarks/>
        public void GetDeliveryAsync(string user, string pass, string uniqid, object userState) {
            if ((this.GetDeliveryOperationCompleted == null)) {
                this.GetDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetDelivery", new object[] {
                        user,
                        pass,
                        uniqid}, this.GetDeliveryOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOperationCompleted(object arg) {
            if ((this.GetDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryCompleted(this, new GetDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetUsertime", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetUsertime(string user, string pass) {
            object[] results = this.Invoke("GetUsertime", new object[] {
                        user,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsertimeAsync(string user, string pass) {
            this.GetUsertimeAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void GetUsertimeAsync(string user, string pass, object userState) {
            if ((this.GetUsertimeOperationCompleted == null)) {
                this.GetUsertimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsertimeOperationCompleted);
            }
            this.InvokeAsync("GetUsertime", new object[] {
                        user,
                        pass}, this.GetUsertimeOperationCompleted, userState);
        }
        
        private void OnGetUsertimeOperationCompleted(object arg) {
            if ((this.GetUsertimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsertimeCompleted(this, new GetUsertimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("CheckMessage", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CheckMessage(string user, string pass, string messageid) {
            object[] results = this.Invoke("CheckMessage", new object[] {
                        user,
                        pass,
                        messageid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMessageAsync(string user, string pass, string messageid) {
            this.CheckMessageAsync(user, pass, messageid, null);
        }
        
        /// <remarks/>
        public void CheckMessageAsync(string user, string pass, string messageid, object userState) {
            if ((this.CheckMessageOperationCompleted == null)) {
                this.CheckMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMessageOperationCompleted);
            }
            this.InvokeAsync("CheckMessage", new object[] {
                        user,
                        pass,
                        messageid}, this.CheckMessageOperationCompleted, userState);
        }
        
        private void OnCheckMessageOperationCompleted(object arg) {
            if ((this.CheckMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMessageCompleted(this, new CheckMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetTicketList", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetTicketList(string user, string pass) {
            object[] results = this.Invoke("GetTicketList", new object[] {
                        user,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketListAsync(string user, string pass) {
            this.GetTicketListAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void GetTicketListAsync(string user, string pass, object userState) {
            if ((this.GetTicketListOperationCompleted == null)) {
                this.GetTicketListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketListOperationCompleted);
            }
            this.InvokeAsync("GetTicketList", new object[] {
                        user,
                        pass}, this.GetTicketListOperationCompleted, userState);
        }
        
        private void OnGetTicketListOperationCompleted(object arg) {
            if ((this.GetTicketListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketListCompleted(this, new GetTicketListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetTicketDetail", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetTicketDetail(string user, string pass, string ticket_id) {
            object[] results = this.Invoke("GetTicketDetail", new object[] {
                        user,
                        pass,
                        ticket_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketDetailAsync(string user, string pass, string ticket_id) {
            this.GetTicketDetailAsync(user, pass, ticket_id, null);
        }
        
        /// <remarks/>
        public void GetTicketDetailAsync(string user, string pass, string ticket_id, object userState) {
            if ((this.GetTicketDetailOperationCompleted == null)) {
                this.GetTicketDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketDetailOperationCompleted);
            }
            this.InvokeAsync("GetTicketDetail", new object[] {
                        user,
                        pass,
                        ticket_id}, this.GetTicketDetailOperationCompleted, userState);
        }
        
        private void OnGetTicketDetailOperationCompleted(object arg) {
            if ((this.GetTicketDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketDetailCompleted(this, new GetTicketDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("AddTicket", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string AddTicket(string user, string pass, string subject, string description, string type, string importance, string sms_notification, string file, string page) {
            object[] results = this.Invoke("AddTicket", new object[] {
                        user,
                        pass,
                        subject,
                        description,
                        type,
                        importance,
                        sms_notification,
                        file,
                        page});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTicketAsync(string user, string pass, string subject, string description, string type, string importance, string sms_notification, string file, string page) {
            this.AddTicketAsync(user, pass, subject, description, type, importance, sms_notification, file, page, null);
        }
        
        /// <remarks/>
        public void AddTicketAsync(string user, string pass, string subject, string description, string type, string importance, string sms_notification, string file, string page, object userState) {
            if ((this.AddTicketOperationCompleted == null)) {
                this.AddTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTicketOperationCompleted);
            }
            this.InvokeAsync("AddTicket", new object[] {
                        user,
                        pass,
                        subject,
                        description,
                        type,
                        importance,
                        sms_notification,
                        file,
                        page}, this.AddTicketOperationCompleted, userState);
        }
        
        private void OnAddTicketOperationCompleted(object arg) {
            if ((this.AddTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTicketCompleted(this, new AddTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("AnswerTicket", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string AnswerTicket(string user, string pass, string ticket_id, string description, string file) {
            object[] results = this.Invoke("AnswerTicket", new object[] {
                        user,
                        pass,
                        ticket_id,
                        description,
                        file});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AnswerTicketAsync(string user, string pass, string ticket_id, string description, string file) {
            this.AnswerTicketAsync(user, pass, ticket_id, description, file, null);
        }
        
        /// <remarks/>
        public void AnswerTicketAsync(string user, string pass, string ticket_id, string description, string file, object userState) {
            if ((this.AnswerTicketOperationCompleted == null)) {
                this.AnswerTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswerTicketOperationCompleted);
            }
            this.InvokeAsync("AnswerTicket", new object[] {
                        user,
                        pass,
                        ticket_id,
                        description,
                        file}, this.AnswerTicketOperationCompleted, userState);
        }
        
        private void OnAnswerTicketOperationCompleted(object arg) {
            if ((this.AnswerTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnswerTicketCompleted(this, new AnswerTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("SendQuickSMS", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string SendQuickSMS(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op) {
            object[] results = this.Invoke("SendQuickSMS", new object[] {
                        fromNum,
                        toNum,
                        messageContent,
                        user,
                        pass,
                        time,
                        op});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendQuickSMSAsync(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op) {
            this.SendQuickSMSAsync(fromNum, toNum, messageContent, user, pass, time, op, null);
        }
        
        /// <remarks/>
        public void SendQuickSMSAsync(string fromNum, string toNum, string messageContent, string user, string pass, string time, string op, object userState) {
            if ((this.SendQuickSMSOperationCompleted == null)) {
                this.SendQuickSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQuickSMSOperationCompleted);
            }
            this.InvokeAsync("SendQuickSMS", new object[] {
                        fromNum,
                        toNum,
                        messageContent,
                        user,
                        pass,
                        time,
                        op}, this.SendQuickSMSOperationCompleted, userState);
        }
        
        private void OnSendQuickSMSOperationCompleted(object arg) {
            if ((this.SendQuickSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQuickSMSCompleted(this, new SendQuickSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("sendPatternSms", RequestNamespace="https://ippanel.com/class/sms/wsdlservice/server.php", ResponseNamespace="https://ippanel.com/class/sms/wsdlservice/server.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string sendPatternSms(string fromNum, string toNum, string user, string pass, string pattern_code, string input_data) {
            object[] results = this.Invoke("sendPatternSms", new object[] {
                        fromNum,
                        toNum,
                        user,
                        pass,
                        pattern_code,
                        input_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendPatternSmsAsync(string fromNum, string toNum, string user, string pass, string pattern_code, string input_data) {
            this.sendPatternSmsAsync(fromNum, toNum, user, pass, pattern_code, input_data, null);
        }
        
        /// <remarks/>
        public void sendPatternSmsAsync(string fromNum, string toNum, string user, string pass, string pattern_code, string input_data, object userState) {
            if ((this.sendPatternSmsOperationCompleted == null)) {
                this.sendPatternSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPatternSmsOperationCompleted);
            }
            this.InvokeAsync("sendPatternSms", new object[] {
                        fromNum,
                        toNum,
                        user,
                        pass,
                        pattern_code,
                        input_data}, this.sendPatternSmsOperationCompleted, userState);
        }
        
        private void OnsendPatternSmsOperationCompleted(object arg) {
            if ((this.sendPatternSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPatternSmsCompleted(this, new sendPatternSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendSMSV2CompletedEventHandler(object sender, SendSMSV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCreditCompletedEventHandler(object sender, GetCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteperiodCompletedEventHandler(object sender, deleteperiodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteperiodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteperiodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendvoiceCompletedEventHandler(object sender, sendvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLinesCompletedEventHandler(object sender, GetLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void inboxlistCompletedEventHandler(object sender, inboxlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class inboxlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal inboxlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDeliveryCompletedEventHandler(object sender, GetDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUsertimeCompletedEventHandler(object sender, GetUsertimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsertimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsertimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckMessageCompletedEventHandler(object sender, CheckMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTicketListCompletedEventHandler(object sender, GetTicketListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTicketDetailCompletedEventHandler(object sender, GetTicketDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTicketCompletedEventHandler(object sender, AddTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AnswerTicketCompletedEventHandler(object sender, AnswerTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnswerTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnswerTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendQuickSMSCompletedEventHandler(object sender, SendQuickSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendQuickSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendQuickSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendPatternSmsCompletedEventHandler(object sender, sendPatternSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendPatternSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendPatternSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591