//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiWorld.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Flight
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Flight()
        {
            this.AdequateApts = new HashSet<AdequateApt>();
            this.AircraftConfigurations = new HashSet<AircraftConfiguration>();
            this.Airports = new HashSet<Airport>();
            this.AirportWeatherDataPlanningEnRouteAlternates = new HashSet<AirportWeatherDataPlanningEnRouteAlternate>();
            this.ALT1Notam = new HashSet<ALT1Notam>();
            this.Alt1Points = new HashSet<Alt1Points>();
            this.ALT2Notam = new HashSet<ALT2Notam>();
            this.Alt2Points = new HashSet<Alt2Points>();
            this.AltApts = new HashSet<AltApt>();
            this.AlternateNotams = new HashSet<AlternateNotam>();
            this.CorrectionTables = new HashSet<CorrectionTable>();
            this.Crews = new HashSet<Crew>();
            this.DEPNotams = new HashSet<DEPNotam>();
            this.DESTNotams = new HashSet<DESTNotam>();
            this.EnrouteAlternates = new HashSet<EnrouteAlternate>();
            this.ExtraFuels = new HashSet<ExtraFuel>();
            this.FIRs = new HashSet<FIR>();
            this.FreeTexts = new HashSet<FreeText>();
            this.MelItems = new HashSet<MelItem>();
            this.Messages = new HashSet<Message>();
            this.NextLegs = new HashSet<NextLeg>();
            this.OptFlightLevels = new HashSet<OptFlightLevel>();
            this.PassThroughValues = new HashSet<PassThroughValue>();
            this.PDPPoints = new HashSet<PDPPoint>();
            this.PpsVersionInformations = new HashSet<PpsVersionInformation>();
            this.RoutePoints = new HashSet<RoutePoint>();
            this.SIDAlternatives = new HashSet<SIDAlternative>();
            this.StdAlternates = new HashSet<StdAlternate>();
            this.PlanningEnRouteAlternateAirports = new HashSet<PlanningEnRouteAlternateAirport>();
            this.ToAlt1Points = new HashSet<ToAlt1Points>();
            this.FIRNotams = new HashSet<FIRNotam>();
            this.AdequateNotams = new HashSet<AdequateNotam>();
        }
    
        public int Id { get; set; }
        public Nullable<int> OverflightCostId { get; set; }
        public string FlightLogID { get; set; }
        public string PPSName { get; set; }
        public string ACFTAIL { get; set; }
        public string DEP { get; set; }
        public string DEST { get; set; }
        public string ALT1 { get; set; }
        public string ALT2 { get; set; }
        public Nullable<System.DateTime> STD { get; set; }
        public Nullable<int> PAX { get; set; }
        public Nullable<double> FUEL { get; set; }
        public Nullable<int> LOAD { get; set; }
        public string ValidHrs { get; set; }
        public Nullable<int> MinFL { get; set; }
        public Nullable<int> MaxFL { get; set; }
        public string EROPSAltApts { get; set; }
        public string TOA { get; set; }
        public string FMDID { get; set; }
        public string DESTSTDALT { get; set; }
        public string FUELCOMP { get; set; }
        public string TIMECOMP { get; set; }
        public string FUELCONT { get; set; }
        public string TIMECONT { get; set; }
        public string PCTCONT { get; set; }
        public string FUELMIN { get; set; }
        public string TIMEMIN { get; set; }
        public string FUELTAXI { get; set; }
        public string TIMETAXI { get; set; }
        public string FUELEXTRA { get; set; }
        public string TIMEEXTRA { get; set; }
        public string FUELLDG { get; set; }
        public string TIMELDG { get; set; }
        public string ZFM { get; set; }
        public string GCD { get; set; }
        public string ESAD { get; set; }
        public string GL { get; set; }
        public string FUELBIAS { get; set; }
        public Nullable<System.DateTime> STA { get; set; }
        public Nullable<System.DateTime> ETA { get; set; }
        public string LocalTime { get; set; }
        public Nullable<int> SCHBLOCKTIME { get; set; }
        public string DISP { get; set; }
        public Nullable<System.DateTime> LastEditDate { get; set; }
        public Nullable<System.DateTime> LatestFlightPlanDate { get; set; }
        public Nullable<System.DateTime> LatestDocumentUploadDate { get; set; }
        public string FUELMINTO { get; set; }
        public string TIMEMINTO { get; set; }
        public string ARAMP { get; set; }
        public string TIMEACT { get; set; }
        public string FUELACT { get; set; }
        public string DestERA { get; set; }
        public string TrafficLoad { get; set; }
        public string WeightUnit { get; set; }
        public string WindComponent { get; set; }
        public string CustomerDataPPS { get; set; }
        public string CustomerDataScheduled { get; set; }
        public Nullable<int> Fl { get; set; }
        public Nullable<int> RouteDistNM { get; set; }
        public string RouteName { get; set; }
        public string RouteType { get; set; }
        public string RouteRemark { get; set; }
        public Nullable<int> EmptyWeight { get; set; }
        public Nullable<int> TotalDistance { get; set; }
        public Nullable<int> AltDist { get; set; }
        public Nullable<int> DestTime { get; set; }
        public Nullable<int> AltTime { get; set; }
        public Nullable<int> AltFuel { get; set; }
        public Nullable<int> HoldTime { get; set; }
        public Nullable<int> ReserveTime { get; set; }
        public Nullable<int> Cargo { get; set; }
        public Nullable<double> ActTOW { get; set; }
        public Nullable<double> TripFuel { get; set; }
        public Nullable<double> HoldFuel { get; set; }
        public Nullable<int> HoldingId { get; set; }
        public Nullable<double> Elw { get; set; }
        public string FuelPolicy { get; set; }
        public Nullable<int> Alt2Time { get; set; }
        public Nullable<int> Alt2Fuel { get; set; }
        public Nullable<double> MaxTOM { get; set; }
        public Nullable<double> MaxLM { get; set; }
        public Nullable<double> MaxZFM { get; set; }
        public Nullable<System.DateTime> WeatherObsTime { get; set; }
        public Nullable<System.DateTime> WeatherPlanTime { get; set; }
        public string MFCI { get; set; }
        public string CruiseProfile { get; set; }
        public Nullable<int> TempTopOfClimb { get; set; }
        public string Climb { get; set; }
        public string Descend { get; set; }
        public string FuelPL { get; set; }
        public string DescendWind { get; set; }
        public string ClimbProfile { get; set; }
        public string DescendProfile { get; set; }
        public string HoldProfile { get; set; }
        public string StepClimbProfile { get; set; }
        public string FuelContDef { get; set; }
        public string FuelAltDef { get; set; }
        public string AmexsyStatus { get; set; }
        public Nullable<int> AvgTrack { get; set; }
        public Nullable<int> DEPTAFId { get; set; }
        public string DEPMetar { get; set; }
        public Nullable<int> DESTTAFId { get; set; }
        public string DESTMetar { get; set; }
        public Nullable<int> ALT1TAFId { get; set; }
        public Nullable<int> ALT2TAFId { get; set; }
        public string ALT1Metar { get; set; }
        public string ALT2Metar { get; set; }
        public Nullable<int> ResponceId { get; set; }
        public Nullable<int> ATCDataId { get; set; }
        public Nullable<int> NextLegId { get; set; }
        public Nullable<int> RCFDataId { get; set; }
        public string TOALT { get; set; }
        public Nullable<int> RouteStringsId { get; set; }
        public string DEPIATA { get; set; }
        public string DESTIATA { get; set; }
        public Nullable<int> SIDPlannedId { get; set; }
        public Nullable<int> FinalReserveMinutes { get; set; }
        public Nullable<int> FinalReserveFuel { get; set; }
        public Nullable<int> AddFuelMinutes { get; set; }
        public Nullable<int> AddFuel { get; set; }
        public string FlightSummary { get; set; }
        public string CommercialFlightNumber { get; set; }
        public Nullable<int> EtopsInformationId { get; set; }
        public Nullable<double> FuelINCRBurn { get; set; }
        public string ExternalFlightId { get; set; }
        public string GUFI { get; set; }
        public Nullable<int> SidAndStarProceduresId { get; set; }
        public Nullable<double> FMRI { get; set; }
        public Nullable<int> LoadId { get; set; }
        public Nullable<int> AircraftConfigurationId { get; set; }
        public Nullable<bool> IsRecalc { get; set; }
        public Nullable<double> MaxRampWeight { get; set; }
        public string UnderloadFactor { get; set; }
        public Nullable<int> AvgISA { get; set; }
        public string HWCorrection20KtsTime { get; set; }
        public Nullable<double> HWCorrection20KtsFuel { get; set; }
        public Nullable<double> Correction1TON { get; set; }
        public Nullable<double> Correction2TON { get; set; }
        public string RcfHeader { get; set; }
        public Nullable<bool> ALT2AsInfoOnly { get; set; }
        public Nullable<int> PpsVersionInformationId { get; set; }
        public Nullable<int> CustomReferencesId { get; set; }
        public string CFMUStatus { get; set; }
        public Nullable<double> StructuralTOM { get; set; }
        public string FW1 { get; set; }
        public string FW2 { get; set; }
        public string FW3 { get; set; }
        public string FW4 { get; set; }
        public string FW5 { get; set; }
        public string FW6 { get; set; }
        public string FW7 { get; set; }
        public string FW8 { get; set; }
        public string FW9 { get; set; }
        public Nullable<double> TOTALPAXWEIGHT { get; set; }
        public Nullable<int> Alt2Dist { get; set; }
        public string FMSIdent { get; set; }
        public string AircraftFuelBias { get; set; }
        public string MelFuelBias { get; set; }
        public Nullable<int> DepartureAlternateAirportId { get; set; }
        public Nullable<int> EnRouteAlternateAirportId { get; set; }
        public Nullable<int> LocalTimeId { get; set; }
        public Nullable<int> HoldingFuelId { get; set; }
        public Nullable<int> ResponseId { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AdequateApt> AdequateApts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AircraftConfiguration> AircraftConfigurations { get; set; }
        public virtual AircraftConfiguration AircraftConfiguration { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Airport> Airports { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AirportWeatherDataPlanningEnRouteAlternate> AirportWeatherDataPlanningEnRouteAlternates { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ALT1Notam> ALT1Notam { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Alt1Points> Alt1Points { get; set; }
        public virtual ALT1Taf ALT1Taf { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ALT2Notam> ALT2Notam { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Alt2Points> Alt2Points { get; set; }
        public virtual ALT2Taf ALT2Taf { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AltApt> AltApts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AlternateNotam> AlternateNotams { get; set; }
        public virtual ATC ATC { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CorrectionTable> CorrectionTables { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Crew> Crews { get; set; }
        public virtual CustomReference CustomReference { get; set; }
        public virtual DepartureAlternateAirport DepartureAlternateAirport { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DEPNotam> DEPNotams { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DESTNotam> DESTNotams { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EnrouteAlternate> EnrouteAlternates { get; set; }
        public virtual EnRouteAlternateAirport EnRouteAlternateAirport { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ExtraFuel> ExtraFuels { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FIR> FIRs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FreeText> FreeTexts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MelItem> MelItems { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Message> Messages { get; set; }
        public virtual SidAndStarProcedure SidAndStarProcedure { get; set; }
        public virtual HoldingFuel HoldingFuel { get; set; }
        public virtual NextLeg NextLeg { get; set; }
        public virtual PpsVersionInformation PpsVersionInformation { get; set; }
        public virtual RCFData RCFData { get; set; }
        public virtual Response Response { get; set; }
        public virtual RouteString RouteString { get; set; }
        public virtual SIDPlanned SIDPlanned { get; set; }
        public virtual LocalTime LocalTime1 { get; set; }
        public virtual Load Load1 { get; set; }
        public virtual OverflightCost OverflightCost { get; set; }
        public virtual Response Response1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<NextLeg> NextLegs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OptFlightLevel> OptFlightLevels { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PassThroughValue> PassThroughValues { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PDPPoint> PDPPoints { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PpsVersionInformation> PpsVersionInformations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RoutePoint> RoutePoints { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SIDAlternative> SIDAlternatives { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<StdAlternate> StdAlternates { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PlanningEnRouteAlternateAirport> PlanningEnRouteAlternateAirports { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ToAlt1Points> ToAlt1Points { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FIRNotam> FIRNotams { get; set; }
        public virtual EtopsInformation EtopsInformation { get; set; }
        public virtual DEPTaf DEPTaf { get; set; }
        public virtual DESTTaf DESTTaf { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AdequateNotam> AdequateNotams { get; set; }
    }
}
