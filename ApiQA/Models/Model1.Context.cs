//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiQA.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ppa_entities : DbContext
    {
        public ppa_entities()
            : base("name=ppa_entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FlightInformation> FlightInformations { get; set; }
        public virtual DbSet<AppLeg> AppLegs { get; set; }
        public virtual DbSet<QACSREvent> QACSREvents { get; set; }
        public virtual DbSet<QAOption> QAOptions { get; set; }
        public virtual DbSet<QAResponsibilty> QAResponsibilties { get; set; }
        public virtual DbSet<QAComment> QAComments { get; set; }
        public virtual DbSet<QAAuthCard> QAAuthCards { get; set; }
        public virtual DbSet<ViewQACSREvent> ViewQACSREvents { get; set; }
        public virtual DbSet<ViewQAResponsibility> ViewQAResponsibilities { get; set; }
        public virtual DbSet<ViewQAComment> ViewQAComments { get; set; }
        public virtual DbSet<ViewQAFollowingUp> ViewQAFollowingUps { get; set; }
        public virtual DbSet<ViewQAByEmployeeCount> ViewQAByEmployeeCounts { get; set; }
        public virtual DbSet<ViewFlightLogMain> ViewFlightLogMains { get; set; }
        public virtual DbSet<ViewFlightLog> ViewFlightLogs { get; set; }
        public virtual DbSet<DutyLog> DutyLogs { get; set; }
        public virtual DbSet<ViewDutyLog> ViewDutyLogs { get; set; }
        public virtual DbSet<QAAttachment> QAAttachments { get; set; }
        public virtual DbSet<QACatering> QACaterings { get; set; }
        public virtual DbSet<QACSR> QACSRs { get; set; }
        public virtual DbSet<QACyber> QACybers { get; set; }
        public virtual DbSet<QADispatch> QADispatches { get; set; }
        public virtual DbSet<QAGroundIAD> QAGroundIADs { get; set; }
        public virtual DbSet<QAHazard> QAHazards { get; set; }
        public virtual DbSet<QAMaintenance> QAMaintenances { get; set; }
        public virtual DbSet<QAReceiverComment> QAReceiverComments { get; set; }
        public virtual DbSet<QASecurity> QASecurities { get; set; }
        public virtual DbSet<ViewQACatering> ViewQACaterings { get; set; }
        public virtual DbSet<ViewQACSR> ViewQACSRs { get; set; }
        public virtual DbSet<ViewQACyber> ViewQACybers { get; set; }
        public virtual DbSet<ViewQADispatch> ViewQADispatches { get; set; }
        public virtual DbSet<ViewQAGround> ViewQAGrounds { get; set; }
        public virtual DbSet<ViewQAHazard> ViewQAHazards { get; set; }
        public virtual DbSet<ViewQAMaintenance> ViewQAMaintenances { get; set; }
        public virtual DbSet<ViewQASecurity> ViewQASecurities { get; set; }
        public virtual DbSet<Airport> Airports { get; set; }
        public virtual DbSet<ViewEmployee> ViewEmployees { get; set; }
        public virtual DbSet<ViewProfile> ViewProfiles { get; set; }
        public virtual DbSet<ViewProfileLog> ViewProfileLogs { get; set; }
        public virtual DbSet<ViewQADashCatering> ViewQADashCaterings { get; set; }
        public virtual DbSet<ViewQaDashCSR> ViewQaDashCSRs { get; set; }
        public virtual DbSet<ViewQADashCSREvent> ViewQADashCSREvents { get; set; }
        public virtual DbSet<ViewQADashCyber> ViewQADashCybers { get; set; }
        public virtual DbSet<ViewQADashDispatch> ViewQADashDispatches { get; set; }
        public virtual DbSet<ViewQaDashGround> ViewQaDashGrounds { get; set; }
        public virtual DbSet<ViewQaDashHazard> ViewQaDashHazards { get; set; }
        public virtual DbSet<ViewQaDashMaintenance> ViewQaDashMaintenances { get; set; }
        public virtual DbSet<ViewQaDashSecurity> ViewQaDashSecurities { get; set; }
        public virtual DbSet<ViewQaFeedback> ViewQaFeedbacks { get; set; }
        public virtual DbSet<ViewQaReportsByCreator> ViewQaReportsByCreators { get; set; }
        public virtual DbSet<QAFollowingUp> QAFollowingUps { get; set; }
        public virtual DbSet<QAFeedback> QAFeedbacks { get; set; }
        public virtual DbSet<QAGetEntites_Result> QAGetEntites_Result { get; set; }
        public virtual DbSet<ViewQABYEmployee> ViewQABYEmployees { get; set; }
        public virtual DbSet<EFBASR> EFBASRs { get; set; }
    
        public virtual int QAByEmployeeCount(Nullable<int> type, Nullable<int> entityId)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QAByEmployeeCount", typeParameter, entityIdParameter);
        }
    
        public virtual ObjectResult<QACateringGet_Result3> QACateringGet(Nullable<int> employeeId, Nullable<int> flightId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var flightIdParameter = flightId.HasValue ?
                new ObjectParameter("FlightId", flightId) :
                new ObjectParameter("FlightId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QACateringGet_Result3>("QACateringGet", employeeIdParameter, flightIdParameter);
        }
    
        public virtual ObjectResult<QACSRGet_Result2> QACSRGet(Nullable<int> employeeId, Nullable<int> flightId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var flightIdParameter = flightId.HasValue ?
                new ObjectParameter("FlightId", flightId) :
                new ObjectParameter("FlightId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QACSRGet_Result2>("QACSRGet", employeeIdParameter, flightIdParameter);
        }
    
        public virtual ObjectResult<QACyberGet_Result4> QACyberGet(Nullable<int> employeeId, Nullable<int> flightId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var flightIdParameter = flightId.HasValue ?
                new ObjectParameter("FlightId", flightId) :
                new ObjectParameter("FlightId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QACyberGet_Result4>("QACyberGet", employeeIdParameter, flightIdParameter);
        }
    
        public virtual ObjectResult<QADispatchGet_Result8> QADispatchGet(Nullable<int> employeeId, Nullable<int> flightId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var flightIdParameter = flightId.HasValue ?
                new ObjectParameter("FlightId", flightId) :
                new ObjectParameter("FlightId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QADispatchGet_Result8>("QADispatchGet", employeeIdParameter, flightIdParameter);
        }
    
        public virtual ObjectResult<QAGroundGet_Result2> QAGroundGet(Nullable<int> employeeId, Nullable<int> flightId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var flightIdParameter = flightId.HasValue ?
                new ObjectParameter("FlightId", flightId) :
                new ObjectParameter("FlightId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QAGroundGet_Result2>("QAGroundGet", employeeIdParameter, flightIdParameter);
        }
    
        public virtual ObjectResult<QAMaintenanceGet_Result3> QAMaintenanceGet(Nullable<int> employeeId, Nullable<int> flightId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var flightIdParameter = flightId.HasValue ?
                new ObjectParameter("FlightId", flightId) :
                new ObjectParameter("FlightId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QAMaintenanceGet_Result3>("QAMaintenanceGet", employeeIdParameter, flightIdParameter);
        }
    
        public virtual ObjectResult<QASecurityGet_Result3> QASecurityGet(Nullable<int> employeeId, Nullable<int> flightId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var flightIdParameter = flightId.HasValue ?
                new ObjectParameter("FlightId", flightId) :
                new ObjectParameter("FlightId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QASecurityGet_Result3>("QASecurityGet", employeeIdParameter, flightIdParameter);
        }
    
        public virtual ObjectResult<QAGetEntites_Result> QAGetEntities(Nullable<int> employeeId, Nullable<int> type, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QAGetEntites_Result>("QAGetEntities", employeeIdParameter, typeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<QAGetEntites_Result> QAGetEntities(Nullable<int> employeeId, Nullable<int> type, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, MergeOption mergeOption)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QAGetEntites_Result>("QAGetEntities", mergeOption, employeeIdParameter, typeParameter, fromDateParameter, toDateParameter);
        }
    }
}
