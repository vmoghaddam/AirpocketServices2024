//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiFDM.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbEntities : DbContext
    {
        public dbEntities()
            : base("name=dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CrewSecretCode> CrewSecretCodes { get; set; }
        public virtual DbSet<FlightInformation> FlightInformations { get; set; }
        public virtual DbSet<Airport> Airports { get; set; }
        public virtual DbSet<ViewLegTime> ViewLegTimes { get; set; }
        public virtual DbSet<AppLeg> AppLegs { get; set; }
        public virtual DbSet<Ac_MSN> Ac_MSN { get; set; }
        public virtual DbSet<FDMMonthly> FDMMonthlies { get; set; }
        public virtual DbSet<FDMCptMonthly> FDMCptMonthlies { get; set; }
        public virtual DbSet<FDMCptMonthlyTBL> FDMCptMonthlyTBLs { get; set; }
        public virtual DbSet<FDMRegMonthly> FDMRegMonthlies { get; set; }
        public virtual DbSet<FDMCptAirportMonthly> FDMCptAirportMonthlies { get; set; }
        public virtual DbSet<FDMAirportMonthly> FDMAirportMonthlies { get; set; }
        public virtual DbSet<FDMCptAll> FDMCptAlls { get; set; }
        public virtual DbSet<FDMCptFoMonthly> FDMCptFoMonthlies { get; set; }
        public virtual DbSet<FDM> FDMs { get; set; }
        public virtual DbSet<FDMCptEventMonthly> FDMCptEventMonthlies { get; set; }
        public virtual DbSet<FDMFoEventMonthly> FDMFoEventMonthlies { get; set; }
        public virtual DbSet<FDMRegCptMonthly> FDMRegCptMonthlies { get; set; }
        public virtual DbSet<FDMCptIpMonthly> FDMCptIpMonthlies { get; set; }
        public virtual DbSet<FDMRegEventMonthly> FDMRegEventMonthlies { get; set; }
        public virtual DbSet<FDMFoMonthly> FDMFoMonthlies { get; set; }
        public virtual DbSet<FDMPhaseMonthly> FDMPhaseMonthlies { get; set; }
        public virtual DbSet<FDMRegFoMonthly> FDMRegFoMonthlies { get; set; }
        public virtual DbSet<ViewFDM> ViewFDMs { get; set; }
        public virtual DbSet<FDMEventMonthly> FDMEventMonthlies { get; set; }
        public virtual DbSet<QAOption> QAOptions { get; set; }
        public virtual DbSet<QAHazard> QAHazards { get; set; }
        public virtual DbSet<QAGroundIAD> QAGroundIADs { get; set; }
        public virtual DbSet<ViewQAGround> ViewQAGrounds { get; set; }
        public virtual DbSet<ViewQAHazard> ViewQAHazards { get; set; }
        public virtual DbSet<ViewQACSR> ViewQACSRs { get; set; }
        public virtual DbSet<QACSR> QACSRs { get; set; }
        public virtual DbSet<QACSREvent> QACSREvents { get; set; }
        public virtual DbSet<QAMOR> QAMORs { get; set; }
        public virtual DbSet<ViewQAMOR> ViewQAMORs { get; set; }
    
        public virtual int FillFDMCptMonthlyTBL(Nullable<int> yearFrom, Nullable<int> monthFrom, Nullable<int> yearTo, Nullable<int> monthTo)
        {
            var yearFromParameter = yearFrom.HasValue ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(int));
    
            var monthFromParameter = monthFrom.HasValue ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(int));
    
            var yearToParameter = yearTo.HasValue ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(int));
    
            var monthToParameter = monthTo.HasValue ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FillFDMCptMonthlyTBL", yearFromParameter, monthFromParameter, yearToParameter, monthToParameter);
        }
    }
}
